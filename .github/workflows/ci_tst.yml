name: test_ci

on:
  pull_request:
    branches:
      - main
      - develop
  push:
    branches:
      - main
  workflow_call:

jobs:
  test:
    name: code standard
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: "checkout repository"
        uses: actions/checkout@v2

      - name: "install dependencies"
        run: |
          pip install -r src/requirements.txt
          pip install pylint

      - name: "run tests"
        run: pytest

      - name: "run pylint"
        run: pylint --fail-under=7 $(git ls-files 'src/*.py')

      - name: "get timestamp"
        id: timestamp
        run: |
          timestamp=$(date +%Y%m%d%H%M%S)
          echo $timestamp

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: vinayagrawalqb/test-repo:${{ github.sha }}, vinayagrawalqb/test-repo:latest

#      - name: Build and push
#        id: gen_tags
#        run: |
#          if 1=1; then
#            timestamp=$(date +%Y%m%d%H%M%S)
##            echo $timestamp
#            TAGS='["vinayagrawalqb/test-repo:latest","user/image:$timestamp"]'
##          else
##            timestamp() {
##            date +"%T" # current time
##            }
##            TAGS='["vinayagrawalqb/test-repo:timestamp"]'
#          fi
#          echo '::set-output name=tags::'$TAGS
#
#      - name: Build and push
#        id: build
#        uses: docker/build-push-action@v3
#        need: gen_tags
#        with:
#          push: true
#          tags: vinayagrawalqb/test-repo:${{ steps.timestamp.outputs.tags }}

#      - name: Build the Docker image
#        run: docker build . --file Dockerfile --tag trial_cicd_docker:$(date +%s)

#  build:
#    runs-on: ubuntu-latest
#    steps:
#    - uses: actions/checkout@v3
#    - name: Build the Docker image
#      run: docker build . --file Dockerfile --tag trial_cicd_docker:$(date +%s)


#  lint:
#    name: Code standards
#    runs-on: ubuntu-latest
#    timeout-minutes: 10
#    steps:
#      - name: "☁️ checkout repository"
#        uses: actions/checkout@v2
#
#      - name: "🔧 setup node"
#        uses: actions/setup-node@v2.1.5
#        with:
#          node-version: 16
#
#      - name: "🔧 install npm@latest"
#        run: npm i -g npm@latest
#
#      - name: "📦 install dependencies"
#        uses: bahmutov/npm-install@v1
#
#      - name: "🔍 lint code"
#        run: npm run lint --if-present
